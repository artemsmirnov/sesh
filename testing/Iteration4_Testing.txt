Test case 1.
Description:
installing the programme to PATH for further use

Expected result: installing the programme to /usr/bin

Result: PASS.

Test case 2.
Description:
Launching the programme by "sesh" command from root directory

Expected result: the programme should launch

Result: PASS.

Test case 3.
Description:
Launching the programme with "-h" parameter from root directory.

Expected result: the programme should display parameters help and exit.

Result: PASS.

Test case 4.
Description:
Launching the programme with "-v" parameter from root directory.

Expected result: the programme should display current version of the programme and exit.

Result: PASS.

Test case 5.
Description:
Entering "help" command in sesh from root directory from sesh/src.

Expected result: the programme should display helpfile and return to input.

Result: PASS.

Test case 6.
Description:
Entering "history" command in sesh from sesh/src.

Expected result: the programme should display history of entered commands with index numbers and return to input.

Result: PASS.

Test case 7.
Description:
Entering "cd .." command in sesh from sesh/src.
Expected result: the programme should move to the upper directory and return to input.

Result: PASS.

Test case 8.
Description:
Entering "cd ../.." command in sesh from sesh/src.

Expected result: the programme should move up for two directories and return to input.

Result: PASS.

Test case 9.
Description:
Entering "echo fubar" command in sesh from sesh/src.

Expected result: the programme should launch "echo" file from PATH which displays "fubar" message and then return to the input.

Result: PASS.

Test case 10.
Description:
Entering "./hw -f" command in sesh being in "sesh/src".

Expected result: the programme should launch "hw" file with "-f" parameter from the current directory (sesh/src) which displays "Hello, f world!." message and then return to the input.

Result: PASS.

Test case 11.
Description:
Entering "exit" command in sesh from sesh/src..

Expected result: the programme should exit and return to the terminal.

Result: PASS.

Test case 12.
Description:
Entering "ls" command in sesh from sesh/src.

Expected result: the programme should list files and directories in current directory and return to input.

Result: PASS.

Test case 13.
Description:
Entering "ls /home" command in sesh from sesh/src.

Expected result: the programme should list files and directories in /home directory and return to the terminal.

Result: PASS.

Test case 14.
Description:
Entering "ls .." command in sesh from sesh/src.

Expected result: the programme should list files and directories in parent directory "sesh" and return to input.

Result: PASS.

Test case 15.
Description:
Entering "ls src" command in sesh, being in sesh directory.

Expected result: the programme should list files and directories in "sesh/src" directory and return to the terminal.

Result: PASS.

Test case 16.
Description:
Entering "cd" command in sesh from sesh/src.

Expected result: the programme should change directory to home directory.

Result: PASS.


Test case 17.
Description:
Pressing <ENTER> in sesh from sesh/src.

Expected result: the programme should do nothing and return to input.

Result: PASS.

Test case 18.
Description:
Entering command "42" in sesh command line and pressing <BACKSPACE> from sesh/src.

Expected result: the programme should erase previous character and get "4" in the entered command.

Result: PASS.

Test case 19.
Description:
Entering "cd /" command in sesh from sesh/src.

Expected result: the programme should move to root directory and return to input.

Result: PASS.

Test case 20.
Description:
Entering "sesh" command in sesh from sesh/src.

Expected result: the programme should run sesh being in sesh.

Result: PASS.

Test case 21.
Description:
Entering "git pull origin master" command in sesh from sesh.

Expected result: the programme should run git with arguments "pull" "origin" and "master" being in sesh.

Result: PASS.

Test case 22.
Description:
Entering "git commit -m "finished testing"" command in sesh from sesh.

Expected result: the programme should run git with arguments "commit" "-m" and ""finished testing"" being in sesh.

Result: PASS.


Test case 23.
Description:
Pressing "up" arrow and <ENTER> in sesh from sesh.

Expected result: the programme should run previous entered command being in sesh.

Result: PASS.

Test case 24.
Description:
Pressing "up" and then "down" arrow, then entering "ls" command in sesh from sesh.

Expected result: the programme should run "ls" command being in sesh.

Result: FAIL.

Test case 25.
Description:
Pressing "up" arrow twice and then "down" arrow in sesh from sesh.

Expected result: the programme should run previous entered command being in sesh.

Result: PASS.

Test case 26.
Description:
Entering "./Ma" and pressing <TAB> in sesh from src.

Expected result: the programme should autocomplete entered command to "./Makefile".

Result: FAIL.

Test case 27.
Description:
Entering "Ma" and pressing <TAB> in sesh from src.

Expected result: the programme should autocomplete entered command to "Makefile".

Result: PASS.

Test case 28.
Description:
Entering "lol" and pressing <TAB> in sesh from src.

Expected result: the programme should do nothing.

Result: FAIL.

Test case 29.
Description:
Entering "h" and pressing <TAB> in sesh from src.

Expected result: the programme should list all the files starting with the letter "h" in src directory.

Result: PASS.